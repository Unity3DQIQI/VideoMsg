syntax = "proto2"; //版本
option java_package="com.msg";
option java_outer_classname = "FishMessage";

// id 1101, 钓到鱼,增加积分
message ReqFishAddScore {
  // 调到鱼的用户id
  required string platformId = 1;
  // 这条鱼增加的积分
  required int32 score = 2;
}

// id 1102, 开始boss战
message ReqFishStartBossFight{
}

// id 1103, 结算boss战(废弃)
message ReqFishSettleBossFight{
  // 排名
  repeated string ids = 1;
  // 时装id
  required int32 suitId = 2;
}

// id 1104,
message ReqFishSettle{

}

// id 1105 获取钓鱼排行榜
message ReqFishRank{
  // 排行榜类型:WORLD表示世界排行,LIVE表示直播间排行
  required string rankType = 1;
}

// id 1107 踢出玩家
message ReqFishKickPlayer{
  // 玩家id
  required string id = 1;
}

// id 1108 服务器内部使用,客户端不要使用
message S2SFishEliminatePlayer{
  required bool success = 1;
  // 被踢玩家
  optional string id = 2;
}

// 2101
message ResFishBindRoom {
  // 结果
  required int32 errorCode = 1;
  // 房间号
  optional string roomid = 2;
  // 房间状态 IDLE表示房间空闲,STARTED表示游戏已开始,BOSSPREPARE表示等待发送boss战消息, BOSS表示BOSS战中, BOSS_WAIT_END表示等待boss结算, SETTLE表示结算中
  optional string status = 3;
  optional string gameSetId = 4;
  // 主播信息
  optional FishStreamerInfo streamer = 5;
  // 该房间内已加入阵营的所有用户信息
  repeated FishUserInfo users = 6;
}

// 2102
message ResFishEnterCamp {
  // 本次加入阵营的用户信息
  repeated FishUserInfo users = 1;
  // 该房间内已加入阵营的所有用户信息,未包含本次加入的
  repeated FishUserInfo totalUsers = 2;
}

// id 2103, 增加积分的回复
message ResFishAddScore {
  // 错误信息
  required int32 errorCode = 1;
  // 用户id
  required string platformId = 2;
  // 玩家此次加分
  required int32 score=3;
  // 玩家当局总加分
  required int32 totalScore=4;
}

// id 2104, boss战已报名的名单(已废弃)
message ResFishBossFightList{
  // 参加boss战的名单
  repeated string ids = 1;
}

// id 2105, 回复开始boss战
message ResFishStartBossFight{
  // 结果, 1表示成功
  required int32 errorCode = 1;
  // 局号
  required string gameSetId = 2;
}

// id 2106, boss战结算结果(废弃)
message ResFishSettleBossFight {
  // 错误码
  required int32 errorCode = 1;
  // 时装id
  required int32 suitId = 2;
  // boss战排行榜
  repeated FishBossRankItem bossRanks = 3;
}

// id 2107, 钓鱼一局结算
message ResFishSettle {
  required int32 errorCode = 1;
  // 本局排名
  repeated FishRoundRankItem ranks = 2;
}

// id 2108 回复钓鱼世界排行榜
message ResFishRank {
  required string rankType = 1;
  repeated FishRankItem ranks = 2;
}

// id 2109
message ResFishSendItem {
  repeated FishItemInfo items = 1;
  optional string messageId = 2;
}

// id 2110
message ResFishStole{
  // 小偷分数更新
  required FishStolenUpdateInfo thiefInfo = 1;
  // 被偷者分数更新
  repeated FishStolenUpdateInfo lostInfos = 2;
}

// id 2111 boss战待结算玩家送礼信息
message ResFishBossWaitSettleList{
  repeated FishBossGiftInfo bossGiftInfos = 1;
}

// id 2112 boss战剩余时间倒计时提示
message ResFishBossLeftTime {
  // 剩余时间,秒
  required int32 leftSeconds = 1;
  // 门票id
  required int32 itemId = 2;
}

// id 2113 大鱼1分钟提示
message ResFishBoss1MinNotice{
  required int32 itemId = 1;
}

// id 2114 换装消息
message ResFishChangeSuit{
  // 玩家id
  required string platformId = 1;
  // 时装id
  required int32 suitId = 2;
}

// id 2115 踢出玩家
message ResFishKickPlayer{
  // 被踢出的玩家
  required string id = 1;
  repeated FishUserInfo totalUsers = 2;
}

// id 2116播放动画
message ResFishPlayAnimation{
  // 玩家id
  required string id = 1;
  // 动画id, 10001为大姨动画
  required int32 animationId = 2;
  // 持续时间
  required int64 duration = 3;
}

// id 2117 一叶知秋盲盒(废弃)
message ResFishBlindBox{
  // 玩家id
  required string id = 1;
  // 中奖物品
  repeated FishProp props = 2;
}

// id 2118 开始获取特殊鱼获,内含弹幕信息(暂时不用)
message ResFishObtainSpecial {
  // 用户id
  required string id = 1;
  // 弹幕信息
  required FishBulletComment bulletComment = 2;
}

// id 2119 获取特殊鱼获的结果(暂时不用)
message ResFishObtainSpecialResult{
  // 用户id
  required string id = 1;
  // 是否成功,true-成功,false-大鱼溜走了
  required bool success = 2;
  // 获取到的特殊鱼获
  optional FishProp prop = 3;
}

// id 2120 物品变化信息消息(暂时不用)
message ResFishPropUpdate {
  // 用户id
  required string id = 1;
  // 具体的物品变化信息
  required FishPropUpdateInfo info = 2;
}

// id 2121 起鱼
message ResUpFish {
  // 用户id
  required string id = 1;
  // 鱼类型,1为起普通鱼,加分已由ResAddScore消息处理 2为起特殊鱼获 3 为下一轮显示弹幕 4为大鱼溜走了
  required int32 type = 2;
  // 特殊鱼获信息
  optional FishProp prop = 5;
  //如果有,则下一次甩杆显示弹幕
  optional FishBulletComment bullet = 6;
}

// id 2122 累积的,还未放出的锦鲤数量变化
message ResLuckyFishInfo {
  // 增加的锦鲤数量
  required int32 addCount = 1;
  // 增加后的锦鲤数量
  required int32 totalCount = 2;
}

// id 2123 boss战结束
message ResFishBossFightFinish {

}

// id 2124 boss战期间的倒计时,boss战还有多少时间结束
message ResBossCountDown {
  // 本局boss战总时长(秒)
  required int32 total = 1;
  // 剩余时长(秒)
  required int32 left = 2;
}

// 2125 黄金座位出现
message ResFishGoldenSeatAppear{
  // 需要被标记为黄金座位的位置
  repeated string seats = 1;
}

// 2126 对换位置, 下面是换之前的信息,客户端将两人对换
message ResFishSwapSeat {
  // 1号玩家id
  optional string id1 = 1;
  // 1号玩家座位
  required string camp1 = 2;
  // 2号玩家id
  optional string id2 = 3;
  // 2号玩家座位
  required string camp2 = 4;
}

// 2127 移动位置,移动到空白为止
message ResFishMoveSeat {
  // 移动位置的玩家
  required string id = 1;
  // 玩家原位置
  required string fromCamp = 2;
  // 玩家移动到的位置
  required string toCamp = 3;
}

// 2128 某玩家获得黄金宝座界面提示,只是用于界面播报
message ResFishWinGoldenSeatTip{
  // 获得宝座的玩家id
  required string id = 1;
}

// 2129 淘汰位出现, 显示淘汰位前,需要客户端把场上已有淘汰位标记清掉,再标记该座位
message ResFishEliminateAppear{
  // 位置号
  required string camp = 1;
}

// 2130 开始抢夺淘汰位,开始后应将该座位的淘汰标记清除
message ResFishEliminateStart{
  // 防守者id
  required string defenderId = 1;
  // 挑战者id
  required string challengerId = 2;
  // 抢夺的座位号
  required string camp = 3;
}

// 2131 抢夺进度
message ResFishEliminateProgress {
  // 防守者id
  required string defenderId = 1;
  // 挑战者id
  required string challengerId = 2;
  // 防守者票数
  required int32 defenderVotes = 3;
  // 挑战者票数
  required int32 challengerVotes = 4;
}

// 2132 座位抢夺结果
message ResFishEliminateResult{
  // 防守者id
  required string defenderId = 1;
  // 挑战者id
  required string challengerId = 2;
  // 抢夺的座位号
  required string camp = 3;
  // 是否挑战成功
  required bool success = 4;
}

// 2133 撒网捕鱼结果信息
message ResCatchFishResult{
  // 用户id
  required string id = 1;
  // 玩家此次加分(普通鱼获)
  required int32 score=2;
  // 特殊鱼获
  repeated FishProp props = 4;
}

// boss战排名项
message FishBossRankItem {
  // 用户信息
  required FishUserInfo user = 1;
  // 增加的分数
  required int32 addScore = 2;
  // 时装百分比, 比如50表示50%
  required int32 percent = 3;
}

// 游戏一局结束时排名的一项
message FishRoundRankItem {
  // 用户信息
  required FishUserInfo user = 1;
  // 增加的分数
  required int32 addScore = 2;
  // 排名变化
  required int32 rankChange = 4;
//  // 时装进度
//  repeated FishRankSuitItem suits = 5;
}

// 世界排行榜的一项
message FishRankItem {
  // 用户信息
  required FishUserInfo user = 1;
  // 积分
  required int64 score = 2;
  // 称号
  repeated int32 titles = 3;
}

message FishRankSuitItem{
  required int32 suitId = 1;
  required int32 percent = 2;
}

message FishUserInfo {
  // 平台方的id
  required string platformId = 1;
  // 名字,昵称
  required string name = 2;
  // 阵营
  required string camp = 3;
  // 头像地址
  required string headUrl = 4;
  // 分数
  required int64 score = 5;
  // 世界排名
  required int32 rank = 6;
  // 已获得的称号id
  repeated int32 titleIds = 7;
  // 当前时装
  optional FishProp currentSuit = 8;
}

// 主播信息
message FishStreamerInfo {
  // 平台id,抖音方主播的id
  required string platformId = 2;
  // 主播在平台的昵称
  required string name = 3;
  // 头像地址
  required string headUrl = 4;
}

message FishItemInfo{
  // 礼物id
  required int32 itemId = 1;
  // 礼物名字
  required string name = 2;
  // 价格
  required int32 cost = 3;
  // 礼物数量
  required int32 num = 4;
  // 累计该礼物数量
  required int32 totalNum = 5;
  // 送礼物的人
  required FishUserInfo user = 6;
  // 是否送礼前创建玩家形象
  required bool createUser = 7;
}

// 被偷者信息
message FishStolenLostInfo {
  // 被偷者id
  required string id = 1;
  // 被偷分数
  required int32 score = 2;
}

// 偷鱼后分数变化更新
message FishStolenUpdateInfo{
  // 用户id
  required string id = 1;
  // 分数变化,小偷为正,被偷的用户为负
  required int32 score = 2;
  // 分数变化后玩家身上的分数
  required int32 totalScore = 3;
}

// boss战待结算玩家送礼信息
message FishBossGiftInfo{
  // 用户id
  required string id = 1;
  // 礼物id
  required int32 itemId = 2;
  // 礼物数量
  required int32 count = 3;
  // 礼物单价
  required int32 cost = 4;
}

// 物品,道具
message FishProp{
  // 服务器唯一编号
  required int64 id = 1;
  // 模型id, 客户端可以用来对应图片信息
  required int32 modelId = 2;
  // 数量
  required int32 num = 3;
  // 客户端物品类型
  required int32 cType = 4;
}

// 物品变化信息
message FishPropUpdateInfo {
  // 服务器唯一编号
  required int64 id = 1;
  // 模型id, 客户端可以用来对应图片信息
  required int32 modelId = 2;
  // 变化的数量
  required int32 numChange = 3;
  // 变化后的数量
  required int32 num = 4;
}

// 弹幕信息
message FishBulletComment{
  // 弹幕内容
  required string comment = 1;
  // 弹幕持续时间, 毫秒
  required int64 duration = 2;
}